#!/usr/bin/env python
# coding: utf-8

# ## 1. Chunking by index(contents of PDF)

# In[23]:


import PyPDF2
import re
import json

def extract_text_from_pdf(pdf_path):
    """Extracts text from each page of the PDF."""
    with open(pdf_path, 'rb') as file:
        reader = PyPDF2.PdfReader(file)
        text = [page.extract_text() for page in reader.pages]
    return text

def parse_index(index_text):
    """Parses the index to identify section titles and page numbers."""
    index_pattern = re.compile(r'^(.*)\s+(\d+)$')
    sections = []
    
    for line in index_text.splitlines():
        match = index_pattern.match(line)
        if match:
            section_title, page_number = match.groups()
            sections.append({
                "title": section_title.strip(),
                "start_page": int(page_number)
            })
    
    return sections

def create_chunks(text_by_page, sections):
    """Creates chunks by mapping sections from the index to content."""
    chunks = []
    
    for i, section in enumerate(sections):
        start_page = section['start_page'] - 1
        end_page = sections[i + 1]['start_page'] - 1 if i + 1 < len(sections) else len(text_by_page)
        content = " ".join(text_by_page[start_page:end_page])
        chunks.append({
            "title": section['title'],
            "content": content
        })
    
    return chunks


# ## 2.Replace index for each pdf

# ## A. s3-User Guide PDF
# ## B. s3-api PDF
# ## C. s3-glacier

# In[24]:


index_text = """

What Is Amazon S3 Glacier? ........................................................................................................... 1
Do You Currently Use S3 Glacier? ............................................................................................................. 1
Data Model ..................................................................................................................................................... 3
Vault ........................................................................................................................................................... 3
Archive ....................................................................................................................................................... 4
Job .............................................................................................................................................................. 4
Notification Configuration ..................................................................................................................... 5
Supported Operations ................................................................................................................................. 6
Vault Operations ..................................................................................................................................... 6
Archive Operations .................................................................................................................................. 7
Jobs ............................................................................................................................................................ 7
Accessing S3 Glacier .................................................................................................................................... 7
Regions and Endpoints .......................................................................................................................... 8
Getting Started ................................................................................................................................ 9
Step 1: Before You Begin ......................................................................................................................... 10
Set Up an AWS account ...................................................................................................................... 10
Download the Appropriate AWS SDK ............................................................................................... 12
Step 2: Create a Vault ............................................................................................................................... 13
Step 3: Upload an Archive to a Vault .................................................................................................... 14
Upload an Archive by Using Java ...................................................................................................... 15
Upload an Archive by Using .NET ...................................................................................................... 20
Step 4: Download an Archive from a Vault .......................................................................................... 22
Download an Archive by Using Java ................................................................................................. 23
Download an Archive by Using .NET ................................................................................................ 25
Step 5: Delete an Archive from a Vault ................................................................................................ 27
Related Sections .................................................................................................................................... 27
Delete an Archive by Using Java ....................................................................................................... 28
Delete an Archive by Using .NET ....................................................................................................... 29
Deleting an Archive by Using the AWS CLI ..................................................................................... 30
Step 6: Delete a Vault ............................................................................................................................... 33
Where Do I Go From Here? ...................................................................................................................... 34
Working with Vaults ...................................................................................................................... 35
Vault Operations in S3 Glacier ................................................................................................................ 36
Creating and Deleting Vaults ............................................................................................................. 36
Retrieving Vault Metadata .................................................................................................................. 36
Downloading a Vault Inventory ......................................................................................................... 36
Configuring Vault Notifications ......................................................................................................... 37
Creating a Vault .......................................................................................................................................... 37
Creating a Vault Using Java ............................................................................................................... 38
Creating a Vault Using .NET ............................................................................................................... 41
Creating a Vault Using REST .............................................................................................................. 46
Creating a Vault Using the Console .................................................................................................. 46
Creating a Vault Using the AWS CLI ................................................................................................. 46
Retrieving Vault Metadata ....................................................................................................................... 48
Retrieving Vault Metadata Using Java ............................................................................................. 48
Retrieving Vault Metadata Using .NET ............................................................................................. 51
Retrieving Vault Metadata Using REST ............................................................................................ 54
Retrieving Vault Metadata Using the AWS CLI ............................................................................... 54
Downloading a Vault Inventory .............................................................................................................. 55
About the Inventory ............................................................................................................................. 57
Downloading a Vault Inventory Using Java .................................................................................... 57
Downloading a Vault Inventory Using .NET .................................................................................... 65
Downloading a Vault Inventory Using REST ................................................................................... 72
Downloading a Vault Inventory Using the AWS CLI ...................................................................... 73
Configuring Vault Notifications ............................................................................................................... 75
General Concepts .................................................................................................................................. 76
Configuring Vault Notifications Using Java ..................................................................................... 78
Configuring Vault Notifications Using .NET ..................................................................................... 81
Configuring Vault Notifications Using the REST API ..................................................................... 84
Configuring Vault Notifications by Using the Console .................................................................. 84
Configuring Vault Notifications Using the CLI ................................................................................ 86
Deleting a Vault .......................................................................................................................................... 87
Deleting a Vault Using Java ............................................................................................................... 88
Deleting a Vault Using .NET ............................................................................................................... 89
Deleting a Vault Using REST .............................................................................................................. 91
Deleting an Empty Vault by Using the Console ............................................................................. 91
Deleting a Vault Using the AWS CLI ................................................................................................. 92
Tagging Vaults ............................................................................................................................................ 95
Tagging Vaults by Using the Amazon S3 Glacier Console ............................................................ 96
Tagging Vaults by Using the AWS CLI .............................................................................................. 97
Tagging Vaults by Using the Amazon S3 Glacier API .................................................................... 98
Related Sections .................................................................................................................................... 98
Vault Lock .................................................................................................................................................... 99
Vault Locking Overview ....................................................................................................................... 99
Vault Locking by Using the API ....................................................................................................... 100
Vault Locking Using the CLI ............................................................................................................. 101
Vault Locking by Using the Console .............................................................................................. 103
Working with Archives ................................................................................................................ 106
Archive Operations .................................................................................................................................. 107
Uploading an Archive ........................................................................................................................ 107
Finding an Archive .............................................................................................................................. 107
Downloading an Archive ................................................................................................................... 107
Deleting an Archive ............................................................................................................................ 108
Updating an Archive .......................................................................................................................... 108
Maintaining Client-Side Archive Metadata ......................................................................................... 108
Uploading an Archive .............................................................................................................................. 108
Options for Uploading an Archive .................................................................................................. 109
Uploading an Archive in a Single Operation ................................................................................ 110
Uploading Large Archives in Parts .................................................................................................. 120
Downloading an Archive ........................................................................................................................ 137
Retrieving Archives in Console ........................................................................................................ 138
Downloading an Archive Using Java .............................................................................................. 142
Downloading an Archive Using .NET .............................................................................................. 159
Downloading an Archive by Using REST ....................................................................................... 175
Downloading an Archive Using the AWS CLI ................................................................................ 176
Deleting an Archive ................................................................................................................................. 179
Deleting an Archive Using Java ....................................................................................................... 180
Deleting an Archive Using .NET ....................................................................................................... 182
Deleting an Archive Using REST ...................................................................................................... 185
Deleting an Archive Using the AWS CLI ........................................................................................ 185
Using the AWS SDKs ................................................................................................................... 189
AWS SDK Libraries for Java and .NET .................................................................................................. 189
What Is the Low-Level API? ............................................................................................................. 189
What Is the High-Level API? ............................................................................................................ 190
When to Use the High-Level and Low-Level API ......................................................................... 190
Working with AWS SDKs ........................................................................................................................ 190
Using the AWS SDK for Java ................................................................................................................. 192
Using the Low-Level API ................................................................................................................... 192
Using the High-Level API .................................................................................................................. 193
Running Java Examples Using Eclipse ........................................................................................... 194
Setting the Endpoint ......................................................................................................................... 194
Using the AWS SDK for .NET ................................................................................................................. 195
Using the Low-Level API ................................................................................................................... 196
Using the High-Level API .................................................................................................................. 197
Running .NET Examples ..................................................................................................................... 197
Setting the Endpoint ......................................................................................................................... 198
Code examples ............................................................................................................................. 199
Basics .......................................................................................................................................................... 201
Hello Amazon S3 Glacier .................................................................................................................. 202
Actions .................................................................................................................................................. 203
Scenarios .................................................................................................................................................... 266
Archive a file, get notifications, and initiate a job ....................................................................... 266
Get archive content and delete the archive .................................................................................. 272
Security ........................................................................................................................................ 278
Data Protection ........................................................................................................................................ 278
Data Encryption .................................................................................................................................. 279
Key Management ................................................................................................................................ 280
Internetwork Traﬃc Privacy ............................................................................................................. 280
Identity and Access Management ........................................................................................................ 280
Audience ............................................................................................................................................... 281
Authenticating with identities ......................................................................................................... 282
Managing access using policies ....................................................................................................... 285
How Amazon S3 Glacier works with IAM ...................................................................................... 287
Identity-based policy examples ....................................................................................................... 295
Resource-based policy examples ..................................................................................................... 302
Troubleshooting .................................................................................................................................. 308
Amazon S3 Glacier API Permissions Reference ............................................................................ 310
Logging and Monitoring ......................................................................................................................... 318
Compliance Validation ............................................................................................................................ 319
Resilience ................................................................................................................................................... 321
Infrastructure Security ............................................................................................................................ 322
VPC Endpoints ..................................................................................................................................... 322
Data Retrieval Policies ................................................................................................................ 323
Choosing an S3 Glacier Data Retrieval Policy .................................................................................... 323
Free Tier Only Policy ......................................................................................................................... 324
Max Retrieval Rate Policy ................................................................................................................. 324
No Retrieval Limit Policy .................................................................................................................. 325
Using the S3 Glacier Console to Set Up a Data Retrieval Policy .................................................... 325
Using the Amazon S3 Glacier API to Set Up a Data Retrieval Policy ............................................ 326
Using the Amazon S3 Glacier REST API to Set Up a Data Retrieval Policy ............................. 326
Using the AWS SDKs to Set Up a Data Retrieval Policy ............................................................. 326
Tagging Resources ....................................................................................................................... 327
Tagging Basics .......................................................................................................................................... 327
Tag Restrictions ........................................................................................................................................ 328
Tracking Costs Using Tagging ............................................................................................................... 328
Managing Access Control with Tagging .............................................................................................. 328
Related Sections ....................................................................................................................................... 329
Audit Logging with AWS CloudTrail ........................................................................................... 330
Amazon S3 Glacier Information in CloudTrail ................................................................................... 330
Understanding Amazon S3 Glacier Log File Entries ......................................................................... 331
API Reference ............................................................................................................................... 335
Common Request Headers .................................................................................................................... 336
Common Response Headers .................................................................................................................. 339
Signing Requests ...................................................................................................................................... 339
Example Signature Calculation ........................................................................................................ 341
Calculating Signatures for the Streaming Operations ................................................................ 342
Computing Checksums ........................................................................................................................... 345
Tree Hash Example 1: Uploading an archive in a single request .............................................. 346
Tree Hash Example 2: Uploading an archive using a multipart upload ................................... 347
Computing the Tree Hash of a File ................................................................................................ 348
Receiving Checksums When Downloading Data .......................................................................... 358
Error Responses ........................................................................................................................................ 360
Example 1: Describe Job request with a job ID that does not exist ......................................... 363
Example 2: List Jobs request with an invalid value for the request parameter ...................... 364
Vault Operations ...................................................................................................................................... 365
Abort Vault Lock ................................................................................................................................. 366
Add Tags To Vault .............................................................................................................................. 369
Create Vault ......................................................................................................................................... 372
Complete Vault Lock ......................................................................................................................... 375
Delete Vault ......................................................................................................................................... 378
Delete Vault Access Policy ................................................................................................................ 381
Delete Vault Notifications ................................................................................................................. 384
Describe Vault ..................................................................................................................................... 386
Get Vault Access Policy ..................................................................................................................... 390
Get Vault Lock ..................................................................................................................................... 394
Get Vault Notifications ...................................................................................................................... 398
Initiate Vault Lock .............................................................................................................................. 402
List Tags For Vault ............................................................................................................................. 406
List Vaults ............................................................................................................................................. 409
Remove Tags From Vault .................................................................................................................. 416
Set Vault Access Policy ...................................................................................................................... 419
Set Vault Notification Configuration .............................................................................................. 422
Archive Operations .................................................................................................................................. 426
Delete Archive ..................................................................................................................................... 426
Upload Archive .................................................................................................................................... 429
Multipart Upload Operations ................................................................................................................ 434
Abort Multipart Upload .................................................................................................................... 435
Complete Multipart Upload ............................................................................................................. 437
Initiate Multipart Upload .................................................................................................................. 442
List Parts ............................................................................................................................................... 447
List Multipart Uploads ....................................................................................................................... 454
Upload Part .......................................................................................................................................... 461
Job Operations ......................................................................................................................................... 467
Describe Job ........................................................................................................................................ 467
Get Job Output ................................................................................................................................... 478
Initiate Job ........................................................................................................................................... 489
List Jobs ................................................................................................................................................ 500
Data Types Used in Job Operations .................................................................................................... 510
CSVInput ............................................................................................................................................... 510
CSVOutput ............................................................................................................................................ 512
Encryption ............................................................................................................................................ 513
GlacierJobDescription ........................................................................................................................ 514
Grant ...................................................................................................................................................... 518
Grantee ................................................................................................................................................. 518
InputSerialization ................................................................................................................................ 519
InventoryRetrievalJobInput .............................................................................................................. 520
jobParameters ..................................................................................................................................... 521
OutputLocation ................................................................................................................................... 524
OutputSerialization ............................................................................................................................ 525
S3Location ............................................................................................................................................ 525
SelectParameters ................................................................................................................................ 527
Data Retrieval Operations ...................................................................................................................... 528
Get Data Retrieval Policy .................................................................................................................. 528
List Provision Capacity ...................................................................................................................... 532
Purchase Provisioned Capacity ........................................................................................................ 536
Set Data Retrieval Policy .................................................................................................................. 539
Document History ........................................................................................................................ 545
Earlier Updates ......................................................................................................................................... 546
AWS Glossary ............................................................................................................................... 548

"""


# ## Change the File name here

# In[26]:


# Example Usage
pdfname = 'glacier-dg'  ## Only Change this
pdf_path = f'{pdfname}.pdf'

# Extract and parse
text_by_page = extract_text_from_pdf(pdf_path)
sections = parse_index(index_text)
chunks = create_chunks(text_by_page, sections)

# Save chunks to JSON
with open(f"{pdfname}_chunks.json", "w") as f:
    json.dump(chunks, f, indent=4)
    
print("Chunks created and saved successfully.")


# In[27]:


#Sanity Check for chunking

import json
from collections import defaultdict
from statistics import mean

def analyze_json(file_path):
    """Reads a JSON file and prints out detailed statistics on its structure and key lengths."""
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            data = json.load(file)
        
        if isinstance(data, list):
            print(f"The JSON file contains a list with {len(data)} items.\n")
            
            # Identify unique headers and their types
            headers = set()
            for item in data:
                if isinstance(item, dict):
                    headers.update(item.keys())
            
            print(f"Unique headers found: {len(headers)}")
            for header in headers:
                print(f"- {header}")
            
            # Gather statistics on each header
            header_stats = defaultdict(list)
            for item in data:
                for header in headers:
                    if header in item:
                        header_stats[header].append(len(str(item[header])))
                    else:
                        header_stats[header].append(0)
            
            # Print average length and data type information
            print("\nDetailed statistics for each header:")
            for header, lengths in header_stats.items():
                avg_length = mean(lengths)
                sample_value = next((item[header] for item in data if header in item), None)
                value_type = type(sample_value).__name__ if sample_value is not None else "NoneType"
                print(f"- {header}:")
                print(f"  * Average length: {avg_length:.2f}")
                print(f"  * Sample data type: {value_type}")
                if sample_value:
                    print(f"  * Sample value: {sample_value}")
                print("")

        elif isinstance(data, dict):
            print("The JSON file contains a dictionary with the following keys:")
            for key, value in data.items():
                value_type = type(value).__name__
                print(f"- {key}:")
                print(f"  * Data type: {value_type}")
                if isinstance(value, (list, dict)):
                    print(f"  * Length: {len(value)}")
                print("")

        else:
            print("The JSON file contains a single item of an unrecognized structure.")

        print("\nAnalysis complete.")

    except UnicodeDecodeError as e:
        print("Failed to read the file due to encoding error:", e)


# Example usage
file_path = f"{pdfname}_chunks.json"  # Replace with your file path
analyze_json(file_path)


# ## Raw chunks created - add clean up code here before key word extraction

# In[28]:


import json
import re

# Reduced stopwords for basic cleanup
reduced_stopwords = {"and", "the", "of", "is", "to", "a", "in", "on", "at", "for"}

# Function to check for boilerplate text or empty chunks
def contains_boilerplate_text(chunk):
    boilerplate_patterns = [
        r'^\s*page\s*\d+\s*$',  # Matches patterns like "page 1"
    ]
    return not chunk.strip() or any(re.match(pattern, chunk, re.IGNORECASE) for pattern in boilerplate_patterns)

# Function to remove reduced stopwords
def remove_reduced_stopwords(chunk):
    words = chunk.split()  # Tokenize text
    filtered_words = [word for word in words if word.lower() not in reduced_stopwords]
    return ' '.join(filtered_words)

# Function to clean a single chunk
def clean_chunk(chunk):
    if contains_boilerplate_text(chunk):
        return None, True  # Mark for deletion
    
    cleaned_chunk = remove_reduced_stopwords(chunk)
    was_edited = cleaned_chunk != chunk
    return cleaned_chunk, was_edited

# Function to clean a JSON file containing chunks
def clean_chunks_in_json(input_file_path, output_file_path):
    edited_count = 0
    sanity_check_count = 0
    
    with open(input_file_path, 'r') as file:
        data = json.load(file)
    
    cleaned_data = []
    
    for entry in data:
        cleaned_entry = entry.copy()  # Copy the original entry
        if 'content' in entry and entry['content']:  # Process non-empty content
            cleaned_content, was_edited = clean_chunk(entry['content'])
            cleaned_entry['content'] = cleaned_content if cleaned_content is not None else entry['content']
            if was_edited:
                edited_count += 1
        cleaned_data.append(cleaned_entry)
        sanity_check_count += 1

    with open(output_file_path, 'w') as file:
        json.dump(cleaned_data, file, indent=4)
    
    print(f"Sanity check: {sanity_check_count} chunks processed.")
    print(f"Edited: {edited_count} chunks.")
    print(f"Cleaned data saved to {output_file_path}")


# In[29]:


# Example usage
input_file = "glacier-dg_chunks.json"  # Replace with your JSON file path
output_file = "glacier-dg_cleaned_chunks.json"  # Replace with your desired output file path
clean_chunks_in_json(input_file, output_file)


# ## Keyword extraction - Metadata finalized

# In[30]:


import json
from keybert import KeyBERT

# Load the chunks from the JSON file created in the previous step
pdfname = 'glacier-dg'
input_file_path = f"{pdfname}_cleaned_chunks.json"
output_file_path = f"{pdfname}_cleaned_chunks_with_keywords.json"

# Step 1: Load the JSON file containing the chunks
with open(input_file_path, "r") as file:
    chunks = json.load(file)

# Step 2: Initialize KeyBERT for keyword extraction
kw_model = KeyBERT()

# Step 3: Extract keywords for each chunk
for chunk in chunks:
    content = chunk["content"]
    
    # Extract keywords
    keywords = kw_model.extract_keywords(
        content, 
        keyphrase_ngram_range=(1, 2), 
        stop_words='english', 
        top_n=5
    )
    chunk["keywords"] = [kw[0] for kw in keywords]  # Store extracted keywords in each chunk

# Step 4: Save the new JSON file with title, keywords, and content for each chunk
with open(output_file_path, "w") as f:
    json.dump(chunks, f, indent=4)

print(f"Chunks with keywords saved successfully to {output_file_path}")


# ## Discard empty/incoherent chunks

# In[31]:


import json

# Function to filter out chunks with empty content
def remove_empty_content_chunks(input_file_path, output_file_path):
    # Load the JSON data
    with open(input_file_path, 'r') as file:
        data = json.load(file)
    
    # Sanity check before filtering
    initial_count = len(data)
    
    # Filter out chunks with empty content
    cleaned_data = [chunk for chunk in data if chunk.get('content', '').strip()]
    
    # Sanity check after filtering
    final_count = len(cleaned_data)
    
    # Save the cleaned data back to a JSON file
    with open(output_file_path, 'w') as file:
        json.dump(cleaned_data, file, indent=4)
    
    # Print sanity check results
    print(f"Initial chunk count: {initial_count}")
    print(f"Final chunk count: {final_count}")
    print(f"Chunks removed: {initial_count - final_count}")
    print(f"Cleaned data saved to {output_file_path}")


# In[32]:


# Example usage
save_file_path = f"{pdfname}_cleaned_chunks_with_keywords_final.json"
remove_empty_content_chunks(output_file_path, save_file_path)


# # Add all to single json

# In[36]:


import json
import os

def combine_json_files(input_folder, output_file):
    """
    Combine all JSON files in a folder into a single JSON file.
    
    Args:
        input_folder (str): Path to the folder containing JSON files.
        output_file (str): Path to the output JSON file.
    """
    combined_data = []
    file_count = 0

    # Iterate through all files in the input folder
    for file_name in os.listdir(input_folder):
        if file_name.endswith(".json"):  # Process only JSON files
            file_path = os.path.join(input_folder, file_name)
            with open(file_path, 'r') as file:
                try:
                    data = json.load(file)
                    if isinstance(data, list):
                        combined_data.extend(data)  # Add list elements to combined_data
                    else:
                        combined_data.append(data)  # Add non-list JSON objects directly
                    file_count += 1
                except json.JSONDecodeError as e:
                    print(f"Error reading {file_path}: {e}")

    # Save combined data to the output file
    with open(output_file, 'w') as file:
        json.dump(combined_data, file, indent=4)

    # Print results
    print(f"Processed {file_count} JSON files.")
    print(f"Combined JSON saved to {output_file}")
    print(f"Total combined chunks: {len(combined_data)}")



# In[37]:


# Example usage
input_folder = "Naive_chunks"  # Replace with the path to your folder containing JSON files
output_file = "COMBINED_chunks_NAIVE.json"  # Replace with your desired output file path
combine_json_files(input_folder, output_file)


# In[ ]:




